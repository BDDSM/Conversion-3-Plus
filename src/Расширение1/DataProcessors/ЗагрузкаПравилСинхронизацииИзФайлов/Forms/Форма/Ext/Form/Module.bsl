
&НаСервере
&Вместо("ЗагрузитьПКО")
Процедура Расш1_ЗагрузитьПКО()
	
	Отказ = Ложь;
	ЧтениеXML = ПолучитьЧтениеXML("PKO.xml", Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	ТекстЗапросаПКО = "ВЫБРАТЬ
	|	ПКО.Ссылка КАК СсылкаПравило,
	|	Состав.Ссылка КАК СсылкаСостав
	|ИЗ Справочник.ПравилаКонвертацииОбъектов КАК ПКО
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Справочник.СоставыКонвертаций КАК Состав
	|ПО Состав.ЭлементКонвертации = ПКО.Ссылка
	|	И Состав.Владелец = &Конвертация
	|	И Состав.Отключить = ЛОЖЬ
	|ГДЕ ПКО.Ссылка.Код = &Имя
	|;
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПКО.Ссылка
	|ИЗ Справочник.ПравилаКонвертацииОбъектов КАК ПКО
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Справочник.СоставыКонвертаций КАК СоставЧужой
	|ПО СоставЧужой.ЭлементКонвертации = ПКО.Ссылка
	|	И СоставЧужой.Владелец <> &Конвертация
	|	И СоставЧужой.Отключить = ЛОЖЬ
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Справочник.СоставыКонвертаций КАК СоставСвой
	|ПО СоставСвой.ЭлементКонвертации = ПКО.Ссылка
	|	И СоставСвой.Владелец = &Конвертация
	|	И СоставСвой.Отключить = ЛОЖЬ
	|ГДЕ ПКО.Ссылка.Код = &Имя";
	ЧтениеXML.Прочитать(); //body
	ТекПКО = Неопределено;
	ЧислоОбработано = 0;
	ЧислоСоздано = 0;
	ПравилоСоздано = Ложь;
	Пока ЧтениеXML.Прочитать() Цикл 
		Если ЧтениеXML.Имя = "ПравилоКонвертацииОбъекта" Тогда
			Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда // Загрузка ПКО.
				СтруктураАтрибутов = СтруктураАтрибутовУзла(ЧтениеXML);
				Запрос = Новый Запрос;
				Запрос.Текст = ТекстЗапросаПКО;
				Запрос.УстановитьПараметр("Имя", СтруктураАтрибутов.Код);
				Запрос.УстановитьПараметр("Конвертация", Объект.Конвертация);
				ТекСоставКонвертации = Неопределено;
				ПолучитьПравилоИСоставКонвертации(Запрос, "ПравилаКонвертацииОбъектов", ТекПКО, ТекСоставКонвертации, ПравилоСоздано);
				ТекПКО.ИдентификацияПоПолямПоиска.Очистить();
				ТекПКО.ПравилаКонвертацииСвойств.Очистить();

				ЗаполнитьЗначенияСвойств(ТекПКО, СтруктураАтрибутов);
				// Вариант идентификации - особая логика.
				// Начало изменений
				Если ТекПКО.ИспользоватьДляПолучения Тогда //ED
					ТекПКО.ВариантИдентификации = Перечисления.ВариантыИдентификацииОбъектов[СтруктураАтрибутов.ВариантИдентификации];
				Иначе
					ТекПКО.ВариантИдентификации = Перечисления.ВариантыИдентификацииОбъектов.ПоУникальномуИдентификатору;
				КонецЕсли;
				// Окончание изменений
			ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда // Запись загруженного ПКО.
				ЧислоОбработано = ЧислоОбработано + 1;
				Если ПравилоСоздано Тогда
					ЧислоСоздано = ЧислоСоздано + 1;
				КонецЕсли;
				ТекПКО.Записать();
				СоздатьИзменитьСоставКонвертации(ТекСоставКонвертации, ТекПКО.Ссылка);
				ТекПКО = Неопределено;
			КонецЕсли;
		ИначеЕсли ЧтениеXML.Имя = "Строка"
			И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			ДобавитьСтрокуВТабличнуюЧасть(ТекПКО, "ПравилаКонвертацииСвойств", ЧтениеXML);
		ИначеЕсли ЧтениеXML.Имя = "СтрокаПоиска"
			И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			ДобавитьСтрокуВТабличнуюЧасть(ТекПКО, "ИдентификацияПоПолямПоиска", ЧтениеXML);
		КонецЕсли;
	КонецЦикла;
	ЧтениеXML = Неопределено;
	ТекстСообщения = НСтр("ru='Правила конвертации объектов загружены. Обработано'") + ": "+ЧислоОбработано+", " + НСтр("ru='создано новых'") + " " + + ЧислоСоздано;
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
	ПродолжитьВызов();
КонецПроцедуры
